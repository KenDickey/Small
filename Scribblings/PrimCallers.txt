 <primitive: *>
#(
'ProtoObject =='
'ProtoObject identityHash'
'ProtoObject nextInstance'
'ProtoObject nextObject'
'ProtoObject statePointsTo:'
'ProtoObject withArgs:executeMethod:'
'    Object at:'
'    Object at:put:'
'    Object basicAt:'
'    Object basicAt:put:'
'    Object basicSize'
'    Object class'
'    Object copyFrom:'
'    Object executeMethod:'
'    Object instVarAtPrim73:'
'    Object instVarAtPrim74:put:'
'    Object perform:'
'    Object perform:with:'
'    Object perform:with:with:'
'    Object perform:with:with:with:'
'    Object primitiveChangeClassTo:'
'    Object rawBasicAt:'
'    Object rawBasicAt:put:'
'    Object shallowCopy'
'    Object size'
'    Object someObject'
'    Object with:executeMethod:'
'    Object with:with:executeMethod:'
'    Object with:with:with:executeMethod:'
'    Object with:with:with:with:executeMethod:'
'    Object withArgs:executeMethod:'
'        Debugger class openContext:label:preDebugMessage:'
'        Debugger class openProcess:context:label:'
'        Inspector object:basicAt:'
'        Inspector object:instVarAt:'
'        Inspector objectClass:'
'        Inspector objectSize:'
'        Number @'
'            Float basicAt:'
'            Float basicAt:put:'
'                BoxedFloat64 *'
'                BoxedFloat64 +'
'                BoxedFloat64 -'
'                BoxedFloat64 /'
'                BoxedFloat64 <'
'                BoxedFloat64 <='
'                BoxedFloat64 ='
'                BoxedFloat64 >'
'                BoxedFloat64 >='
'                BoxedFloat64 ~='
'                BoxedFloat64 arcTan'
'                BoxedFloat64 class basicNew:'
'                BoxedFloat64 exp'
'                BoxedFloat64 exponent'
'                BoxedFloat64 fractionPart'
'                BoxedFloat64 ln'
'                BoxedFloat64 primSqrt'
'                BoxedFloat64 sin'
'                BoxedFloat64 timesTwoPower:'
'                BoxedFloat64 truncated'
'                SmallFloat64 *'
'                SmallFloat64 +'
'                SmallFloat64 -'
'                SmallFloat64 /'
'                SmallFloat64 <'
'                SmallFloat64 <='
'                SmallFloat64 ='
'                SmallFloat64 >'
'                SmallFloat64 >='
'                SmallFloat64 ~='
'                SmallFloat64 arcTan'
'                SmallFloat64 exp'
'                SmallFloat64 exponent'
'                SmallFloat64 fractionPart'
'                SmallFloat64 identityHash'
'                SmallFloat64 ln'
'                SmallFloat64 primSqrt'
'                SmallFloat64 profilerFriendlyPrimTimesTwoPower:'
'                SmallFloat64 sin'
'                SmallFloat64 timesTwoPower:'
'                SmallFloat64 truncated'
'            LargePositiveInteger *'
'            LargePositiveInteger +'
'            LargePositiveInteger -'
'            LargePositiveInteger /'
'            LargePositiveInteger //'
'            LargePositiveInteger <'
'            LargePositiveInteger <='
'            LargePositiveInteger >'
'            LargePositiveInteger >='
'            LargePositiveInteger \\'
'            LargePositiveInteger bitXor:'
'            LargePositiveInteger digitAt:'
'            LargePositiveInteger digitAt:put:'
'            LargePositiveInteger digitLength'
'            LargePositiveInteger quo:'
'            SmallInteger *'
'            SmallInteger +'
'            SmallInteger -'
'            SmallInteger /'
'            SmallInteger //'
'            SmallInteger <'
'            SmallInteger <='
'            SmallInteger ='
'            SmallInteger >'
'            SmallInteger >='
'            SmallInteger \\'
'            SmallInteger ~='
'            SmallInteger asFloat'
'            SmallInteger bitAnd:'
'            SmallInteger bitOr:'
'            SmallInteger bitShift:'
'            SmallInteger bitXor:'
'            SmallInteger quo:'
'        Time class primHighResClock'
'        Time class primLocalMicrosecondClock'
'        Time class primMillisecondClock'
'        Time class primUtcMicrosecondClock'
'        Time class primUtcWithOffset'
'        Time class primUtcWithOffset:'
'        ThirtyTwoBitSlotsObject int32SlotAt:'
'        ThirtyTwoBitSlotsObject int32SlotAt:put:'
'        Behavior allInstances'
'        Behavior allInstancesOrNil'
'        Behavior flushCache'
'        Behavior handleFailingBasicNew'
'        Behavior handleFailingBasicNew:'
'        Behavior handleFailingFailingBasicNew'
'        Behavior handleFailingFailingBasicNew:'
'        Behavior identityHash'
'        Behavior someInstance'
'        Character identityHash'
'        Character immediateNumericValue'
'        Character class immediateNumericValue:'
'        BlockClosure copiedValueAt:'
'        BlockClosure ensure:'
'        BlockClosure ifCurtailed:'
'        BlockClosure newProcess'
'        BlockClosure newProcessWith:'
'        BlockClosure numCopiedValues'
'        BlockClosure on:do:'
'        BlockClosure value'
'        BlockClosure value:'
'        BlockClosure value:value:'
'        BlockClosure value:value:value:'
'        BlockClosure value:value:value:value:'
'        BlockClosure valueNoContextSwitch'
'        BlockClosure valueNoContextSwitch:'
'        BlockClosure valueWithArguments:'
'        ContextPart at:'
'        ContextPart at:put:'
'        ContextPart basicAt:'
'        ContextPart basicAt:put:'
'        ContextPart basicSize'
'        ContextPart closureCopy:copiedValues:'
'        ContextPart evaluateSignal:'
'        ContextPart findNextHandlerOrSignalingContext'
'        ContextPart findNextUnwindContextUpTo:'
'        ContextPart object:basicAt:'
'        ContextPart object:basicAt:put:'
'        ContextPart object:eqeq:'
'        ContextPart object:instVarAt:'
'        ContextPart object:instVarAt:put:'
'        ContextPart objectClass:'
'        ContextPart objectSize:'
'        ContextPart size'
'        ContextPart stackp:'
'        ContextPart terminateTo:'
'            MethodContext class allInstances'
'            MethodContext tempAt:'
'            MethodContext tempAt:put:'
'        Delay class primSignal:atMilliseconds:'
'        Delay class primSignal:atUTCMicroseconds:'
'        InputSensor primCursorLocPut:'
'        InputSensor primCursorLocPutAgain:'
'        InputSensor primKbdNext'
'        InputSensor primKbdPeek'
'        InputSensor primMouseButtons'
'        InputSensor primMousePt'
'        InputSensor primSetInterruptKey:'
'            EventSensor primGetNextEvent:'
'            EventSensor primSetInputSemaphore:'
'        ProcessorScheduler class relinquishProcessorForMicroseconds:'
'        ProcessorScheduler yield'
'        String at:'
'        String at:put:'
'        String size'
'            Symbol flushCache'
'        UnicodeSymbol flushCache'
'        ArrayedCollection size'
'            Array atWrap:'
'            Array atWrap:put:'
'            ByteArray atAllPut:'
'                CompiledMethod flushCache'
'                CompiledMethod class handleFailingFailingNewMethod:header:'
'                CompiledMethod class handleFailingNewMethod:header:'
'                CompiledMethod objectAt:'
'                CompiledMethod objectAt:put:'
'                CompiledMethod class receiver:withArguments:executeMethod:'
'            IntegerArray integerAt:'
'            IntegerArray integerAt:put:'
'            IntegerArray primFill:'
'            WordArray atAllPut:'
'            Bitmap atAllPut:'
'            Bitmap integerAt:'
'            Bitmap integerAt:put:'
'            Bitmap primFill:'
'            ShortIntegerArray signedAt:'
'            ShortIntegerArray signedAt:put:'
'        Semaphore signal'
'        Semaphore wait'
'        SystemDictionary allObjects'
'        SystemDictionary allObjectsOrNil'
'        SystemDictionary bytesLeft:'
'        SystemDictionary clearProfile'
'        SystemDictionary dumpProfile'
'        SystemDictionary exitToDebugger'
'        SystemDictionary garbageCollectMost'
'        SystemDictionary getSystemAttribute:'
'        SystemDictionary getVMParameters'
'        SystemDictionary growMemoryByAtLeast:'
'        SystemDictionary imageFormatVersion'
'        SystemDictionary imageName:'
'        SystemDictionary interruptChecksPerMSec'
'        SystemDictionary listBuiltinModule:'
'        SystemDictionary listLoadedModule:'
'        SystemDictionary longRunningPrimitive'
'        SystemDictionary longRunningPrimitiveSemaphore:'
'        SystemDictionary maxIdentityHash'
'        SystemDictionary primBytesLeft'
'        SystemDictionary primImageName'
'        SystemDictionary primLowSpaceSemaphore:'
'        SystemDictionary primSignalAtBytesLeft:'
'        SystemDictionary primVmPath'
'        SystemDictionary primitiveBeep'
'        SystemDictionary primitiveGarbageCollect'
'        SystemDictionary profilePrimitive'
'        SystemDictionary profileSample'
'        SystemDictionary profileSemaphore:'
'        SystemDictionary profileStart:'
'        SystemDictionary quitPrimitive'
'        SystemDictionary quitPrimitive:'
'        SystemDictionary snapshotEmbeddedPrimitive'
'        SystemDictionary snapshotPrimitive'
'        SystemDictionary specialObjectsArray'
'        SystemDictionary startProfiling'
'        SystemDictionary stopProfiling'
'        SystemDictionary unbindExternalPrimitives'
'        SystemDictionary unloadModule:'
'        SystemDictionary vmParameterAt:'
'        SystemDictionary vmParameterAt:put:'
'        SystemDictionary voidCogVMState'
'        InflateStream next'
'        ZipEncoder nextBytePut:'
'        Process primitiveResume'
'        Parser externalFunctionDeclaration'
'        Parser class primitivePragmaSelectors'
'        Clipboard primitiveClipboardString'
'        Clipboard primitiveClipboardString:'
'        Form primPrintHScale:vScale:landscape:'
'            Cursor installCursor'
'            Cursor installCursorWithMask:'
'                CursorWithAlpha installCursor'
'            DisplayScreen class actualScreenDepth'
'            DisplayScreen class actualScreenSize'
'            DisplayScreen beDisplay'
'            DisplayScreen class depth:width:height:fullscreen:'
'            DisplayScreen forceDisplayUpdate'
'            DisplayScreen fullScreenMode:'
'            DisplayScreen primRetryShowRectLeft:right:top:bottom:'
'            DisplayScreen primShowRectLeft:right:top:bottom:'
'            DisplayScreen primitiveDeferUpdates:'
'            DisplayScreen class primitiveScreenScaleFactor'
'            DisplayScreen supportsDisplayDepth:'
'        ClosureTraceNode class new'
'        ReferenceFinderMirror class object:basicAt:'
'        ReferenceFinderMirror class object:instVarAt:'
'        ReferenceFinderMirror class objectClass:'
'        ReferenceFinderMirror class objectSize:'
'    BreakingMethodWrapper class')

 <primitive:error: *>
 #(
'ProtoObject tryPrimitive:withArgs:'
'    Object instVarAt:'
'    Object instVarAt:put:'
'    Object isPinned'
'    Object perform:withArguments:'
'    Object perform:withArguments:inSuperclass:'
'    Object setPinned:'
'        Float replaceWordsFrom:to:with:startingAt:'
'        LargePositiveInteger replaceFrom:to:with:startingAt:'
'        Behavior adoptInstance:'
'        Behavior basicNew'
'        Behavior basicNew:'
'        Behavior byteSizeOfInstance'
'        Behavior byteSizeOfInstanceOfSize:'
'        ContextPart object:perform:withArguments:inClass:'
'        ContextPart tryNamedPrimitiveIn:for:withArgs:'
'        String replaceFrom:to:with:startingAt:'
'        Array elementsExchangeIdentityWith:'
'        Array elementsForwardIdentityTo:'
'        Array elementsForwardIdentityTo:copyHash:'
'        Array replaceFrom:to:with:startingAt:'
'        ByteArray replaceFrom:to:with:startingAt:'
'            CompiledMethod class newMethod:header:'
'        Float32Array replaceFrom:to:with:startingAt:'
'        Float64Array replaceWordsFrom:to:with:startingAt:'
'        RunNotArray replaceFrom:to:with:startingAt:'
'        WordArray replaceFrom:to:with:startingAt:'
'        Bitmap replaceFrom:to:with:startingAt:'
'        Process suspend'
'        Process suspendAndUnblock'
'        Process suspendPrimitivelyOrFail'
'        Parser externalFunctionDeclaration'
'        Parser primitive:'
'        Parser class primitivePragmaSelectors') 

 <primitive:module: *>
 #(
'Integer anyBitOfMagnitudeFrom:to:'
'Integer bitAnd:'
'Integer bitOr:'
'Integer bitShiftMagnitude:'
'Integer bitXor:'
'Integer digitAdd:'
'Integer digitCompare:'
'Integer digitDiv:neg:'
'Integer digitMultiply:neg:'
'Integer digitSubtract:'
'Integer montgomeryDigitLength'
'Integer montgomeryTimes:modulo:mInvModB:'
'    LargePositiveInteger normalize'
'        LargeNegativeInteger normalize'
'ThirtyTwoBitSlotsObject float32SlotAt:'
'ThirtyTwoBitSlotsObject float32SlotAt:put:'
'    Color hash'
'    Color primitiveEqual:'
'InputSensor primReadJoystick:'
'InputSensor primTabletGetParameters:'
'InputSensor primTabletRead:'
'String class compare:with:collated:'
'String class findFirstInString:inSet:startingAt:'
'String class findSubstring:in:startingAt:matchTable:'
'String class indexOfByte:inString:startingAt:'
'String class translate:from:to:table:'
'ByteArray class hashBytes:startingWith:'
'Float32Array dot:'
'Float32Array floatAt:'
'Float32Array floatAt:put:'
'Float32Array hashFull'
'Float32Array normalize'
'Float32Array primAddArray:'
'Float32Array primAddScalar:'
'Float32Array primDivArray:'
'Float32Array primDivScalar:'
'Float32Array primMulArray:'
'Float32Array primMulScalar:'
'Float32Array primSubArray:'
'Float32Array primSubScalar:'
'Float32Array primitiveEqual:'
'Float32Array sum'
'SystemDictionary primGetCurrentWorkingDirectoryUnix'
'SystemDictionary primGetCurrentWorkingDirectoryWindows'
'FastInflateStream decompressBlock:with:'
'UniFileStream primAtEnd:'
'UniFileStream primClose:'
'UniFileStream primCloseNoError:'
'UniFileStream primFlush:'
'UniFileStream primGetPosition:'
'UniFileStream primOpen:writable:'
'UniFileStream primRead:into:startingAt:count:'
'UniFileStream primSetPosition:to:'
'UniFileStream primSize:'
'UniFileStream primSizeNoError:'
'UniFileStream primTruncate:to:'
'UniFileStream primWrite:from:startingAt:count:'
'DeflateStream updateHashTable:delta:'
'    ZipWriteStream deflateBlock:chainLength:goodMatch:'
'    ZipWriteStream class updateCrc:from:to:in:'
'        ZLibWriteStream class updateAdler32:from:to:in:'
'ZipEncoder privateSendBlock:with:with:with:'
'StdIOReadStream primRead:into:startingAt:count:'
'StdIOWriteStream primFlush:'
'StdIOWriteStream primWrite:from:startingAt:count:'
'Parser class primitivePragmaSelectors'
'FileIOAccessor primCreateDirectory:'
'FileIOAccessor primDeleteDirectory:'
'FileIOAccessor primDeleteFileNamed:'
'FileIOAccessor primLookupEntryIn:index:'
'FileIOAccessor primPathNameDelimiter'
'FileIOAccessor primRename:to:'
'Form primPixelValueAtX:y:'
'    DisplayScreen class primitiveWindowPosition:'
'    DisplayScreen class primitiveWindowPosition:x:y:'
'    DisplayScreen class primitiveWindowSize:'
'    DisplayScreen class primitiveWindowSize:x:y:'
'    DisplayScreen class primitiveWindowTitle:string:'
'BMPReadWriter read24BmpLine:into:startingAt:width:'
'BMPReadWriter store24BitBmpLine:from:startingAt:width:'
'JPEGReadWriter2 primImageHeight:'
'JPEGReadWriter2 primImageNumComponents:'
'JPEGReadWriter2 primImageWidth:'
'JPEGReadWriter2 primJPEGCompressStructSize'
'JPEGReadWriter2 primJPEGDecompressStructSize'
'JPEGReadWriter2 primJPEGErrorMgr2StructSize'
'JPEGReadWriter2 class primJPEGPluginIsPresent'
'JPEGReadWriter2 primJPEGPluginIsPresent'
'JPEGReadWriter2 primJPEGReadHeader:fromByteArray:errorMgr:'
'JPEGReadWriter2 primJPEGReadImage:fromByteArray:onForm:doDithering:errorMgr:'
'JPEGReadWriter2 primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr:'
'JPEGReadWriter2 supportsGrayForms'
'BitBlt copyBits'
'BitBlt copyBitsAgain'
'BitBlt copyBitsTranslucent:'
'BitBlt drawLoopX:Y:'
'    WarpBlt warpBitsSmoothing:sourceMap:'
'AffineTransformation ='
'AffineTransformation at:'
'AffineTransformation at:put:'
'AffineTransformation composedWith:into:'
'AffineTransformation hash'
'AffineTransformation isIdentity'
'AffineTransformation isPureTranslation'
'Homography at:'
'Homography at:put:'
'DropFilesEvent primDropRequestFileHandle:'
'DropFilesEvent primDropRequestFileName:'
'VectorEngineWithPlugin class pluginApiVersion'
'VectorEngineWithPlugin primAntiAliasingWidth:subPixelDelta:hopLength:'
'VectorEngineWithPlugin primClipCurrentMorph:morphIds:'
'VectorEngineWithPlugin primClipLeft:clipTop:clipRight:clipBottom:'
'VectorEngineWithPlugin primCurrentMorphId:currentClipsSubmorphs:'
'VectorEngineWithPlugin primFillR:g:b:a:'
'VectorEngineWithPlugin primGeometryTxA11:a12:a13:a21:a22:a23:'
'VectorEngineWithPlugin primInitializePath'
'VectorEngineWithPlugin primNewTrajectoryFragment'
'VectorEngineWithPlugin primResetContourTop:bottom:'
'VectorEngineWithPlugin primResetContourTop:bottom:contour:'
'VectorEngineWithPlugin primSpanBottom'
'VectorEngineWithPlugin primSpanLeft'
'VectorEngineWithPlugin primSpanRight'
'VectorEngineWithPlugin primSpanTop'
'VectorEngineWithPlugin primStrokeR:g:b:a:'
'VectorEngineWithPlugin primStrokeWidth:'
'VectorEngineWithPlugin primUpdateContourLastLine'
'VectorEngineWithPlugin primUpdateContourLastLine:'
'    VectorEngineWithPluginSubPixel primArcCenterX:centerY:radiusX:radiusY:start:sweep:rotationCos:rotationSin:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginSubPixel primBlendFillOnlyLeft:top:right:bottom:targetBits:morphIds:edgeCounts:alphaMask:'
'    VectorEngineWithPluginSubPixel primBlendStrokeAndFillLeft:top:right:bottom:targetBits:morphIds:edgeCounts:alphaMask:'
'    VectorEngineWithPluginSubPixel primBlendStrokeOnlyLeft:top:right:bottom:targetBits:morphIds:alphaMask:'
'    VectorEngineWithPluginSubPixel primCubicBezierFromX:y:toX:y:control1X:y:control2X:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginSubPixel primDisplayUtf8:fromByte:toByte:atx:y:scalex:y:contourData:contourDataIndexes:useST80Glyphs:edgeCounts:alphaMask:'
'    VectorEngineWithPluginSubPixel primLineFromX:y:toX:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginSubPixel primPathSequence:size:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginSubPixel primQuadraticBezierFromX:y:toX:y:controlX:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginSubPixel primTargetBits:morphIds:edgeCounts:alphaMask:contour:targetWidth:targetHeight:'
'    VectorEngineWithPluginWholePixel primArcCenterX:centerY:radiusX:radiusY:start:sweep:rotationCos:rotationSin:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginWholePixel primBlendFillOnlyLeft:top:right:bottom:targetBits:morphIds:edgeCounts:alphaMask:'
'    VectorEngineWithPluginWholePixel primBlendStrokeAndFillLeft:top:right:bottom:targetBits:morphIds:edgeCounts:alphaMask:'
'    VectorEngineWithPluginWholePixel primBlendStrokeOnlyLeft:top:right:bottom:targetBits:morphIds:alphaMask:'
'    VectorEngineWithPluginWholePixel primCubicBezierFromX:y:toX:y:control1X:y:control2X:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginWholePixel primDisplayUtf8:fromByte:toByte:atx:y:scalex:y:contourData:contourDataIndexes:useST80Glyphs:edgeCounts:alphaMask:'
'    VectorEngineWithPluginWholePixel primLineFromX:y:toX:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginWholePixel primPathSequence:size:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginWholePixel primQuadraticBezierFromX:y:toX:y:controlX:y:edgeCounts:alphaMask:contour:'
'    VectorEngineWithPluginWholePixel primTargetBits:morphIds:edgeCounts:alphaMask:contour:targetWidth:targetHeight:') 

 <primitive:module:error: *>
 #(
'StdIOWriteStream class stdioHandles'
'Parser primitive:error:'
'Parser primitive:error:module:'
'Parser primitive:module:'
'Parser class primitivePragmaSelectors') 
